-- Создать таблицу, соответствующую реестру местонахождений сотрудников фирмы ООО «Ромашка». Таблица имеет следующий набор атрибутов:

-- EmplVisits {Department: string, FIO: string, Date: date, Status: string}, где:
-- • Department – название отдела, где работает сотрудник
-- • FIO – ФИО сотрудника
-- • Date – дата фиксации информации о сотруднике
-- • Status – информация о местонахождении сотрудника: на работе/на
-- больничном/в отпуске (оплачиваемом)/в отпуске (за свой счет)

-- Вывести интервалы непрерывного нахождения сотрудника в определенном статусе.

DROP TABLE IF EXISTS EmplVisits;

CREATE TABLE IF NOT EXISTS EmplVisits
(
    department VARCHAR,
	fio VARCHAR,
	date DATE,
	status VARCHAR
);

INSERT INTO EmplVisits(department, fio, date, status) VALUES
('ИТ','Иванов Иван Иванович','2020-01-15','Больничный'),
('ИТ','Иванов Иван Иванович','2020-01-16','На работе'),
('ИТ','Иванов Иван Иванович','2020-01-17','На работе'),
('ИТ','Иванов Иван Иванович','2020-01-18','На работе'),
('ИТ','Иванов Иван Иванович','2020-01-19','Оплачиваемый отпуск'),
('ИТ','Иванов Иван Иванович','2020-01-20','Оплачиваемый отпуск'),
('Бухгалтерия','Петрова Ирина Ивановна','2020-01-15','Оплачиваемый отпуск'),
('Бухгалтерия','Петрова Ирина Ивановна','2020-01-16','На работе'),
('Бухгалтерия','Петрова Ирина Ивановна','2020-01-17','На работе'),
('Бухгалтерия','Петрова Ирина Ивановна','2020-01-18','На работе'),
('Бухгалтерия','Петрова Ирина Ивановна','2020-01-19','Оплачиваемый отпуск'),
('Бухгалтерия','Петрова Ирина Ивановна','2020-01-20','Оплачиваемый отпуск');

-- Предложение OVER, с которым используется функция ROW_NUMBER задает порядок нумерации строк.
-- Конструкция PARTITION BY задает группы строк, для которых выполняется независимая нумерация.
-- date - make_interval(days => num::int) - дата начала пребывания сотрудника в заданном статусе - 1

WITH EmplVisitsNumbered AS 
(
    SELECT row_number() OVER
	(
        PARTITION BY fio, status
        ORDER BY date
    ) AS num, department, fio, date, status
    FROM EmplVisits
)
SELECT 
	department, 
	fio,
	min(date) AS date_from, 
	max(date) AS date_to, 
	status
FROM EmplVisitsNumbered
GROUP BY department, fio, date - make_interval(days => num::int), status
ORDER BY department DESC, fio, date_from;
